import datetime
import re
import gspread
from oauth2client.service_account import ServiceAccountCredentials

HEADERS = ["Character", "Item", "Count", "Price", "Left", "Silver", "Date", "Time"]


def parse_bot_message(message: str, logger=None) -> list:
    try:
        character = re.search(r'–ü–µ—Ä—Å–æ–Ω–∞–∂ (\w+)', message).group(1)
        item_match = re.search(r'—É –≤–∞—Å (.+?) \((\d+) —à—Ç\.\)', message)
        price = re.search(r'–∑–∞ ([\d,]+) —Å–µ—Ä–µ–±—Ä–∞', message).group(1)
        left = re.search(r'–û—Å—Ç–∞–ª–æ—Å—å ([\d,]+) —à—Ç', message).group(1)
        silver = re.search(r'–°–µ—Ä–µ–±—Ä–æ: ([\d,]+)', message).group(1)

        item_name = item_match.group(1)
        item_count = item_match.group(2)

        now = datetime.datetime.now()
        date_str = now.strftime('%Y-%m-%d')
        time_str = now.strftime('%H:%M:%S')

        parsed = [
            character,
            item_name,
            item_count,
            price,
            left.replace(',', ''),
            silver.replace(',', ''),
            date_str,
            time_str
        ]

        if logger:
            logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Ä–∞–∑–æ–±—Ä–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {parsed}")

        return parsed

    except Exception as e:
        if logger:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {e} | –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç: {message}")
        return None


def connect_to_sheet(sheet_id: str, logger=None):
    scope = [
        "https://www.googleapis.com/auth/spreadsheets",
        "https://www.googleapis.com/auth/drive"
    ]
    creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
    client = gspread.authorize(creds)
    sheet = client.open_by_key(sheet_id).sheet1

    first_row = sheet.row_values(1)
    if first_row != HEADERS:
        sheet.insert_row(HEADERS, 1)
        if logger:
            logger.info("üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã.")

    if logger:
        logger.info(f"üìä –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Google Sheets (ID: {sheet_id})")

    return sheet
